import os
from copy import deepcopy

clean_opcode_folder = 'D:/After4thYear/MSc Applied Cyber Security/Research Project/tests/JavaByteCodeGenerator/Opcodes/Clean_Opcodes'
vuln_opcode_folder = 'D:/After4thYear/MSc Applied Cyber Security/Research Project/tests/JavaByteCodeGenerator/Opcodes/Vuln_Opcodes'

def find_files( files, dirs=[], extensions=[]): # recursively find files in directories
    new_dirs = []
    for d in dirs:
        try:
            new_dirs += [ os.path.join(d, f) for f in os.listdir(d)] # check in all directories except testcasesupport 
        except OSError:
            if os.path.splitext(d)[1] in extensions:
                files.append(d)

    if new_dirs:
        find_files(files, new_dirs, extensions)
    else:
        return


def read_files():
    vuln = []
    clean = []

    clean_opcode_files = []
    find_files(clean_opcode_files, dirs=[clean_opcode_folder], extensions=['.txt']) # find all class files in the directory 
    for file_pathname in clean_opcode_files:
        read_clean_opcode_file = open(file_pathname, "r")
        clean_list = []
        for line in read_clean_opcode_file:
            line = line.replace('\n', '')            
            clean_list.append(line)
        clean.append(clean_list)
    read_clean_opcode_file.close()  

    vuln_opcode_files = []
    find_files(vuln_opcode_files, dirs=[vuln_opcode_folder], extensions=['.txt']) # find all class files in the directory 
    for file_pathname in vuln_opcode_files:
        read_vuln_opcode_file = open(file_pathname, "r")
        vuln_list = []
        for line in read_vuln_opcode_file:
            line = line.replace('\n', '')
            vuln_list.append(line)
        vuln.append(vuln_list)
    read_vuln_opcode_file.close()  
	
    return vuln, clean

def label_opcode_data(vuln, clean):
    vuln_label = 0
    clean_label = 1

    dataset = deepcopy(clean) + deepcopy(vuln) # concatenate original clean and original malware samples

    final_vuln_list = []
    new_vuln_list = []
    for list in vuln:
        new_vuln_list.append(list)

    for list in new_vuln_list:
        vuln_list = []
        vuln_list.append(list)
        vuln_list.append(vuln_label)
        final_vuln_list.append(vuln_list)

    final_clean_list = []
    new_clean_list = []
    for list in clean:
        new_clean_list.append(list)

    for list in new_clean_list:
        clean_list = []
        clean_list.append(list)
        clean_list.append(clean_label)
        final_clean_list.append(clean_list)
 
    return final_vuln_list, final_clean_list, dataset


vuln, clean = read_files()
(final_vuln, final_clean, ds) = label_opcode_data(vuln, clean)
vuln_list_file = 'D:/After4thYear/MSc Applied Cyber Security/Research Project/tests/JavaByteCodeGenerator/Final_Vuln.txt'
with open(vuln_list_file, "w") as f1:
    f1.write(str(final_vuln))
    f1.close()
clean_list_file = 'D:/After4thYear/MSc Applied Cyber Security/Research Project/tests/JavaByteCodeGenerator/Final_Clean.txt'
with open(clean_list_file, "w") as f2:
    f2.write(str(final_clean))
    f2.close()
